{"ast":null,"code":"var _jsxFileName = \"D:\\\\Udemy React Course\\\\learning9\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: name,\n    valueIsValid: nameIsValid,\n    hasError: nameIsInvalid,\n    valueChangeHandler: inputChangeHandler,\n    valueBlurHandler: inputBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim !== \"\");\n  const {\n    value: email,\n    valueIsValid: emailIsValid,\n    hasError: emailIsInvalid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.match(\".+@.+\"));\n  let formValid = false;\n  formValid = nameIsValid && emailIsValid;\n  const formSubmitHandler = e => {\n    e.preventDefault();\n    setNameTouched(true);\n    setEmailTouched(true);\n    if (!nameIsValid && !emailIsValid) {\n      return;\n    }\n    console.log(name);\n    console.log(email);\n    setName(\"\");\n    setEmail(\"\");\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n  const nameInputClass = nameIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClass = emailIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: inputChangeHandler,\n        onBlur: inputBlurHandler,\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), emailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must be valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"KbDODs7KT1XLtM6Icxr//WGaSl4=\", false, function () {\n  return [useInput, useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","name","valueIsValid","nameIsValid","hasError","nameIsInvalid","valueChangeHandler","inputChangeHandler","valueBlurHandler","inputBlurHandler","reset","resetNameInput","trim","email","emailIsValid","emailIsInvalid","emailChangeHandler","emailBlurHandler","resetEmailInput","match","formValid","formSubmitHandler","e","preventDefault","setNameTouched","setEmailTouched","console","log","setName","setEmail","nameInputClass","emailInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/Udemy React Course/learning9/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: name,\n    valueIsValid: nameIsValid,\n    hasError: nameIsInvalid,\n    valueChangeHandler: inputChangeHandler,\n    valueBlurHandler: inputBlurHandler,\n    reset: resetNameInput,\n  } = useInput((value) => value.trim !== \"\");\n\n  const {\n    value: email,\n    valueIsValid: emailIsValid,\n    hasError: emailIsInvalid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.match(\".+@.+\"));\n\n  let formValid = false;\n  formValid = nameIsValid && emailIsValid;\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    setNameTouched(true);\n    setEmailTouched(true);\n\n    if (!nameIsValid && !emailIsValid) {\n      return;\n    }\n\n    console.log(name);\n    console.log(email);\n    setName(\"\");\n    setEmail(\"\");\n    setNameTouched(false);\n    setEmailTouched(false);\n  };\n\n  const nameInputClass = nameIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClass = emailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={inputChangeHandler}\n          onBlur={inputBlurHandler}\n          value={name}\n        />\n        {nameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={email}\n        />\n        {emailIsInvalid && <p className=\"error-text\">Email must be valid.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}